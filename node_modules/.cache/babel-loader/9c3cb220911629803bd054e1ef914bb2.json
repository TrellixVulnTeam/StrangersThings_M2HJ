{"ast":null,"code":"var _jsxFileName = \"/Users/ZVR/OneDrive/FULLSTACK/Strangers_Things/src/components/AccountForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { callApi } from '../api';\nimport { Container, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AccountForm = _ref => {\n  _s();\n\n  let {\n    action,\n    setToken\n  } = _ref;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const isLogin = action === 'login';\n  const title = isLogin ? 'Login' : 'Register';\n  const oppositeTitle = isLogin ? 'New user?' : 'Already have an account?';\n  const oppositeAction = isLogin ? 'register' : 'login';\n  const history = useHistory();\n\n  const handleSubmit = async event => {\n    var _data$data;\n\n    event.preventDefault();\n    const data = await callApi({\n      url: `/users/${action}`,\n      body: {\n        user: {\n          username,\n          password\n        }\n      },\n      method: 'POST'\n    });\n    const token = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.token; // console.log(token);\n\n    if (token) {\n      localStorage.setItem('token', token);\n      setUsername('');\n      setPassword('');\n      setToken(token);\n      history.push('/');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        padding: '1px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"username\",\n          value: username,\n          required: true,\n          onChange: event => setUsername(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"password\",\n          value: password,\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          type: \"submit\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/${oppositeAction}`,\n        children: oppositeTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(AccountForm, \"tv8EzuaX//5WlTHeteRkd5b7x4w=\", false, function () {\n  return [useHistory];\n});\n\n_c = AccountForm;\nexport default AccountForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountForm\");","map":{"version":3,"sources":["/Users/ZVR/OneDrive/FULLSTACK/Strangers_Things/src/components/AccountForm.js"],"names":["React","useState","Link","useHistory","callApi","Container","Button","AccountForm","action","setToken","username","setUsername","password","setPassword","isLogin","title","oppositeTitle","oppositeAction","history","handleSubmit","event","preventDefault","data","url","body","user","method","token","localStorage","setItem","push","padding","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { callApi } from '../api';\nimport { Container, Button } from 'react-bootstrap'\n\nconst AccountForm = ({ action, setToken }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const isLogin = action === 'login';\n  const title = isLogin ? 'Login' : 'Register';\n  const oppositeTitle = isLogin ? 'New user?' : 'Already have an account?';\n  const oppositeAction = isLogin ? 'register' : 'login';\n  const history = useHistory();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = await callApi({\n      url: `/users/${action}`,\n      body: { user: { username, password } },\n      method: 'POST',\n    });\n    const token = data?.data?.token;\n    // console.log(token);\n    if (token) {\n      localStorage.setItem('token', token);\n      setUsername('');\n      setPassword('');\n      setToken(token);\n      history.push('/');\n    }\n  };\n\n\n  return (\n    <>\n    <Container style={{padding: '1px'}}>\n      <h2>{title}</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"username\"\n          value={username}\n          required\n          onChange={(event) => setUsername(event.target.value)}\n        ></input>\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n        ></input>{' '}<br />\n        <Button variant='secondary' type=\"submit\">{title}</Button>\n      </form>\n      <Link to={`/${oppositeAction}`}>{oppositeTitle}</Link>\n      </Container>\n    </>\n  );\n};\n\nexport default AccountForm;"]},"metadata":{},"sourceType":"module"}