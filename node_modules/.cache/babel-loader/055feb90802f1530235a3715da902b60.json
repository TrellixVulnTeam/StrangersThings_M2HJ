{"ast":null,"code":"var _jsxFileName = \"/Users/ZVR/OneDrive/FULLSTACK/Strangers_Things/src/components/SinglePost.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { DeletePost, SendMessage } from '.';\nimport { Button, Container } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SinglePost = _ref => {\n  _s();\n\n  let {\n    posts,\n    token,\n    setPosts,\n    userData\n  } = _ref;\n  const {\n    postId\n  } = useParams();\n  const history = useHistory();\n  const post = posts.find(post => postId === post._id); // console.log('SINGLE POST', post);\n\n  const isUser = userData.username === post.author.username;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: post ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Posted by: \", post.author.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: \", post.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", post.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Delivers: \", post.willDeliver ? 'Yes' : 'No']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), isUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => history.push(`${postId}/edit`),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), ' ', /*#__PURE__*/_jsxDEV(DeletePost, {\n            token: token,\n            postId: postId,\n            setPosts: setPosts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : '', token ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: !isUser ? /*#__PURE__*/_jsxDEV(SendMessage, {\n            token: token,\n            postId: postId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 26\n          }, this) : ''\n        }, void 0, false) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this) : ''\n  }, void 0, false);\n};\n\n_s(SinglePost, \"Lao0K+cSugq+TDPqPEWhq95iUvI=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = SinglePost;\nexport default SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/Users/ZVR/OneDrive/FULLSTACK/Strangers_Things/src/components/SinglePost.js"],"names":["React","useParams","useHistory","DeletePost","SendMessage","Button","Container","SinglePost","posts","token","setPosts","userData","postId","history","post","find","_id","isUser","username","author","title","price","location","willDeliver","push"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,GAAxC;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,iBAAlC;;;;AAEA,MAAMC,UAAU,GAAG,QAA0C;AAAA;;AAAA,MAAzC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,GAAyC;AAC3D,QAAM;AAAEC,IAAAA;AAAF,MAAaX,SAAS,EAA5B;AACA,QAAMY,OAAO,GAAGX,UAAU,EAA1B;AAEA,QAAMY,IAAI,GAAGN,KAAK,CAACO,IAAN,CAAYD,IAAD,IAAUF,MAAM,KAAKE,IAAI,CAACE,GAArC,CAAb,CAJ2D,CAK3D;;AAEA,QAAMC,MAAM,GAAGN,QAAQ,CAACO,QAAT,KAAsBJ,IAAI,CAACK,MAAL,CAAYD,QAAjD;AAEA,sBACE;AAAA,cACGJ,IAAI,gBACH;AAAA,6BACE,QAAC,SAAD;AAAA,gCACA;AAAA,oBAAKA,IAAI,CAACM;AAAV;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA,oCAAeN,IAAI,CAACK,MAAL,CAAYD,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAA,gCAAWJ,IAAI,CAACO,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA,eAIA;AAAA,mCAAcP,IAAI,CAACQ,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA,eAKA;AAAA,mCAAcR,IAAI,CAACS,WAAL,GAAmB,KAAnB,GAA2B,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,gBALA,EAMCN,MAAM,gBACL;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,OAAO,EAAE,MAAMJ,OAAO,CAACW,IAAR,CAAc,GAAEZ,MAAO,OAAvB,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAGY,GAHZ,eAIE,QAAC,UAAD;AAAY,YAAA,KAAK,EAAEH,KAAnB;AAA0B,YAAA,MAAM,EAAEG,MAAlC;AAA0C,YAAA,QAAQ,EAAEF;AAApD;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,wBADK,GAQL,EAdF,EAgBCD,KAAK,gBACJ;AAAA,oBACG,CAACQ,MAAD,gBAAU,QAAC,WAAD;AAAa,YAAA,KAAK,EAAER,KAApB;AAA2B,YAAA,MAAM,EAAEG;AAAnC;AAAA;AAAA;AAAA;AAAA,kBAAV,GAA0D;AAD7D,yBADI,GAKJ,EArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADG,GA4BH;AA7BJ,mBADF;AAkCD,CA3CD;;GAAML,U;UACeN,S,EACHC,U;;;KAFZK,U;AA6CN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { DeletePost, SendMessage } from '.';\nimport { Button, Container } from 'react-bootstrap';\n\nconst SinglePost = ({ posts, token, setPosts, userData }) => {\n  const { postId } = useParams();\n  const history = useHistory();\n\n  const post = posts.find((post) => postId === post._id);\n  // console.log('SINGLE POST', post);\n\n  const isUser = userData.username === post.author.username;\n\n  return (\n    <>\n      {post ? (\n        <div>\n          <Container>\n          <h3>{post.title}</h3>\n          <p>Posted by: {post.author.username}</p>\n          <p>Price: {post.price}</p>\n          <p>Location: {post.location}</p>\n          <p>Delivers: {post.willDeliver ? 'Yes' : 'No'}</p>\n          {isUser ? (\n            <>\n              <Button variant='secondary' onClick={() => history.push(`${postId}/edit`)}>\n                Edit\n              </Button>{' '}\n              <DeletePost token={token} postId={postId} setPosts={setPosts} />\n            </>\n          ) : (\n            ''\n          )}\n          {token ? (\n            <>\n              {!isUser ? <SendMessage token={token} postId={postId} /> : ''}\n            </>\n          ) : (\n            ''\n          )}\n      </Container>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n\nexport default SinglePost;\n"]},"metadata":{},"sourceType":"module"}