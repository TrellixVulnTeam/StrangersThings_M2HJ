{"ast":null,"code":"var _jsxFileName = \"/Users/ZVR/OneDrive/FULLSTACK/Strangers_Things/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Card, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = {\n  searchContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    padding: 0,\n    alignItems: 'center'\n  },\n  searchInput: {\n    margin: '0 16px'\n  }\n};\n\nconst postMatches = (post, searchTerm) => {\n  const searchTermLower = searchTerm.toLowerCase();\n  const {\n    description,\n    location,\n    title,\n    author: {\n      username\n    }\n  } = post;\n  const toMatch = [description, location, title, username];\n\n  for (const field of toMatch) {\n    if (field.toLowerCase().includes(searchTermLower)) {\n      return true;\n    }\n  }\n};\n\nconst Posts = _ref => {\n  _s();\n\n  let {\n    posts\n  } = _ref;\n  const history = useHistory();\n  const {\n    postId\n  } = useParams();\n  const [searchTerm, setSearchTerm] = useState('');\n  const postsToDisplay = posts.filter(post => postMatches(post, searchTerm));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.searchContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: styles.searchInput,\n        type: \"text\",\n        placeholder: \"search for posts\",\n        value: searchTerm,\n        onChange: event => {\n          // console.log(event.target.value);\n          setSearchTerm(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), postsToDisplay.length ? postsToDisplay.map(post => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 'auto',\n          padding: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Posted by: \", post.author.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Description: \", post.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Location: \", post.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => history.push(`/posts/${post._id}`),\n          children: \"View Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No posts to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Posts, \"S18MV4igNY95qHpY5GigaKXJIJc=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/ZVR/OneDrive/FULLSTACK/Strangers_Things/src/components/Posts.js"],"names":["React","useState","useHistory","useParams","Card","Button","styles","searchContainer","display","justifyContent","padding","alignItems","searchInput","margin","postMatches","post","searchTerm","searchTermLower","toLowerCase","description","location","title","author","username","toMatch","field","includes","Posts","posts","history","postId","setSearchTerm","postsToDisplay","filter","event","target","value","length","map","width","push","_id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Card, Button } from 'react-bootstrap';\n\nconst styles = {\n  searchContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    padding: 0,\n    alignItems: 'center',\n  },\n  searchInput: {\n    margin: '0 16px',\n  },\n};\n\nconst postMatches = (post, searchTerm) => {\n  const searchTermLower = searchTerm.toLowerCase();\n  const {\n    description,\n    location,\n    title,\n    author: { username }\n  } = post;\n\n  const toMatch = [description, location, title, username];\n\n  for (const field of toMatch) {\n    if (field.toLowerCase().includes(searchTermLower)) {\n      return true;\n    }\n  }\n};\n\nconst Posts = ({ posts }) => {\n  const history = useHistory();\n  const { postId } = useParams();\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const postsToDisplay = posts.filter((post) => postMatches(post, searchTerm));\n\n  return (\n    <>\n      <div style={styles.searchContainer}>\n        <h2>Posts</h2>\n        <input\n          style={styles.searchInput}\n          type='text'\n          placeholder='search for posts'\n          value={searchTerm}\n          onChange={(event) => {\n            // console.log(event.target.value);\n            setSearchTerm(event.target.value);\n          }}\n        ></input>\n      </div>\n      {postsToDisplay.length ? (\n        postsToDisplay.map((post) => (\n          <Card style={{ width: 'auto' }}>\n            <div key={post._id} style={{ width: 'auto', padding: '10px' }}>\n              <h5>{post.title}</h5>\n              <div>Posted by: {post.author.username}</div>\n              <div>Description: {post.description}</div>\n              <div>Location: {post.location}</div>\n              <Button variant='secondary' onClick={() => history.push(`/posts/${post._id}`)}>View Post</Button>\n            </div>\n          </Card>\n        ))\n      ) : (\n        <div>No posts to display</div>\n      )}\n    </>\n  );\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}